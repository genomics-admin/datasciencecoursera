{
    "contents" : "source(\"submitscript3.R\")\nrankall <- function(outcome, num = \"best\") {\n  ## Read outcome data\n  outcomeData <- read.csv(\"outcome-of-care-measures.csv\", colClasses = \"character\")\n  ## Check that state and outcome are valid\n  if (!outcome %in% c(\"heart attack\",\"heart failure\",\"pneumonia\")) stop(\"invalid outcome\")\n  ## For each state, find the hospital of the given rank\n  bdf <- data.frame()\n  \n  ###Handling specific reason for death\n  if(outcome == \"heart attack\"){\n    ocm <- \"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack\"\n    for (state in unique(outcomeData[,\"State\"])){\n      print(state)\n      bestDF <- outcomeData[outcomeData[\"State\"] == state,][c(\"Hospital.Name\",\"State\",ocm)]\n      bestDF <- bestDF[!bestDF[ocm]==\"Not Available\",][c(\"Hospital.Name\",\"State\",ocm)]\n      bestDF[, ocm] <- as.numeric(bestDF[, ocm])\n      bestDF <- bestDF[order(bestDF$\"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack\",bestDF$\"Hospital.Name\"),]\n      bdf <- rbind(bdf,bDF(bestDF,num,state))\n    }\n  }\n  else if(outcome == \"heart failure\"){\n    ocm <- \"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure\"\n    for (state in unique(outcomeData[,\"State\"])){\n      print(state)\n      bestDF <- outcomeData[outcomeData[\"State\"] == state,][c(\"Hospital.Name\",\"State\",ocm)]\n      bestDF <- bestDF[!bestDF[ocm]==\"Not Available\",][c(\"Hospital.Name\",\"State\",ocm)]\n      bestDF[, ocm] <- as.numeric(bestDF[, ocm])\n      bestDF <- bestDF[order(bestDF$\"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure\",bestDF$\"Hospital.Name\"),]\n      bdf <- rbind(bdf,bDF(bestDF,num,state))\n    }\n  }\n  else if(outcome == \"pneumonia\"){\n    ocm <- \"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia\"\n    for (state in unique(outcomeData[,\"State\"])){\n      print(state)\n      bestDF <- outcomeData[outcomeData[\"State\"] == state,][c(\"Hospital.Name\",\"State\",ocm)]\n      bestDF <- bestDF[!bestDF[ocm]==\"Not Available\",][c(\"Hospital.Name\",\"State\",ocm)]\n      bestDF[, ocm] <- as.numeric(bestDF[, ocm])\n      bestDF <- bestDF[order(bestDF$\"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia\",bestDF$\"Hospital.Name\"),]\n      bdf <- rbind(bdf,bDF(bestDF,num,state))\n    }\n  }\n  \n  ###Sorting based on state to handle NA states\n  bdf <- bdf[order(bdf$\"State\"),]\n  \n  ###Handling the column names\n  colnames(bdf) <- c(\"hospital\",\"state\",\"rate\")\n  \n    \n  ## Return a data frame with the hospital names and the\n  ## (abbreviated) state name\n  print(bdf[,c(\"hospital\",\"state\")])\n  return(bdf[,c(\"hospital\",\"state\")])\n}\n\n\n\n\n\n\n###Funciton to handle different num types : returns single row data frame\nbDF <- function(bestDF,num,state){\n  if(num == \"best\"){\n    print(bestDF)\n    print(\"--------------\")\n    print(bestDF[1,])\n    print(\"--------------\")\n    return(bestDF[1,])\n  }\n  else if(num == \"worst\"){\n    print(bestDF)\n    print(\"--------------\")\n    print(bestDF[nrow(bestDF),])\n    print(\"--------------\")\n    return(bestDF[nrow(bestDF),])\n  }\n  else if(num > nrow(bestDF)){\n    print(\"NA\")\n    return(c(\"NA\",state,\"NA\"))\n  }\n  else if(num < nrow(bestDF)){\n    print(bestDF)\n    print(\"--------------\")\n    print(bestDF[num,])\n    print(\"--------------\")\n    return(bestDF[num,])\n  }  \n}\n\n##Test Data\n#rankall(\"heart attack\", 4)\n#rankall(\"pneumonia\", \"worst\")\n#rankall(\"heart failure\", 10)",
    "created" : 1398665869888.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3869742611",
    "id" : "F4FA7DC2",
    "lastKnownWriteTime" : 1398802240,
    "path" : "~/Sandeep/GitHub/datasciencecoursera/IntroToR/Assignment3/rankall.R",
    "project_path" : "rankall.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}